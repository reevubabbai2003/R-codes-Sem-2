# Parameters
n <- 10
p <- 1/3

# Function to calculate PMF for binomial distribution
pmf_binomial <- function(k, n, p) {
  choose(n, k) * p^k * (1 - p)^(n - k)
}

# Calculate PMF for k = 0 to 10
k_values <- 0:n
pmf_values <- sapply(k_values, pmf_binomial, n = n, p = p)

# Print the results
data.frame(k = k_values, PMF = pmf_values)

pmf_values
pmf_values = c(0,pmf_values)

sample = numeric(length = 1e4)
for(i in 1:1e4){
  u = runif(1,0,1)
  print(u)
  for(j in 1:11){
    if(u > cdf[j] & u <= cdf[j+1]){
      sample[i] = j-1
      break 
    }
  }
}
sample
pmf_values
mean(sample)

cdf = c(0,cumsum(pmf_values))

pois = function(x){
  return((exp(-4)*4^x)/factorial(x))
}
############################################
pmf = c(0)
factorial(170)
for(i in 0:170)
{
  pmf = c(pmf,pois(i))
}
pois_cdf = cumsum(pmf)

sample = numeric(length = 1e4)
for(i in 1:1e4){
  u = runif(1,0,1)
  print(u)
  for(j in 1:11){
    if(u > cdf[j] & u <= cdf[j+1]){
      sample[i] = j-1
      break 
    }
  }
}
mean(sample)
var(sample)




